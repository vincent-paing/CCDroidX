name: Release Tag CI/CD

on:
  push:
    tags:
      - '*'

jobs:
  test:
    name: Static Code Check & Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Set up JDK 1.8
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Lint check
        run: ./gradlew lint

      - name: Unit Test
        run: ./gradlew test

  create_apk:
    needs: test
    name: Deploy APK
    runs-on: ubuntu-18.04
    env:
      CCDROIDX_RELEASE_KEYSTORE_PASSWORD: ${{ secrets.CCDROIDX_RELEASE_KEYSTORE_PASSWORD }}
      CCDROIDX_RELEASE_KEY_ALIAS: ${{ secrets.CCDROIDX_RELEASE_KEY_ALIAS }}
      CCDROIDX_RELEASE_KEY_ALIAS_PASSWORD: ${{ secrets.CCDROIDX_RELEASE_KEY_ALIAS_PASSWORD }}
      ENCRYPTED_KEY_STORE: ${{ secrets.ENCRYPTED_KEY_STORE }}
    steps:
      - uses: actions/checkout@v2
      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Setup keystore
        run: |
          touch encrypted_keystore.data
          echo -e "ENCRYPTED_KEY_STORE" >> encrypted_keystore.data
          gpg --output release.keystore --decrypt encrypted_keystore.data
          export CCDROIDX_RELEASE_KEYSTORE_PATH="$(pwd)/release.keystore"

      - name: Build APK
        run: ./gradlew assembleRelease

      - name: Copy APK to outputs
      - run: |
        mkdir -p outputs/
        find . -type f -regex ".*\/*\.apk" -exec cp {} outputs/ \;

      - name: Release Artifact
        uses: actions/upload-artifact@v3
        with:
          name: Builds
          path: outputs/*.apk